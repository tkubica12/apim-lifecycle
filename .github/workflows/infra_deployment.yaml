name: Infra deployment with Terragrunt
on:
  push:
    paths:
      - 'environments/staging/base/**'
  workflow_dispatch:

env:
  TF_VERSION: '1.11.3'
  TG_VERSION: '0.77.11'
  ARM_USE_OIDC: true
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  infra-plan:
    runs-on: ubuntu-latest
    environment: staging-preflight
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.TF_VERSION }}

      - name: 'Install Terragrunt'
        run: |
          curl -L -o ${{ github.workspace }}/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64"
          chmod +x ${{ github.workspace }}/terragrunt

      - name: 'Run Terragrunt Plan on infra'
        run: |
          cd ./environments/staging/base/infra
          ${{ github.workspace }}/terragrunt plan -out=${{ github.workspace }}/infra.tfplan

      - name: 'Run Terragrunt Plan on apim'
        run: |
          cd ./environments/staging/base/apim
          ${{ github.workspace }}/terragrunt plan -out=${{ github.workspace }}/apim.tfplan

      - name: Upload Terraform Plans
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ${{ github.workspace }}/*.tfplan

  infra-deploy:
    needs: infra-plan
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false
          terraform_version: ${{ env.TF_VERSION }}

      - name: 'Install Terragrunt'
        run: |
          curl -L -o ${{ github.workspace }}/terragrunt "https://github.com/gruntwork-io/terragrunt/releases/download/v${{ env.TG_VERSION }}/terragrunt_linux_amd64"
          chmod +x ${{ github.workspace }}/terragrunt

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ${{ github.workspace }}

      - name: 'Run Terragrunt Apply on infra'
        run: |
          cd ./environments/staging/base/infra
          ${{ github.workspace }}/terragrunt apply ${{ github.workspace }}/infra.tfplan

      - name: 'Run Terragrunt Apply on apim'
        run: |
          cd ./environments/staging/base/apim
          ${{ github.workspace }}/terragrunt apply ${{ github.workspace }}/apim.tfplan
