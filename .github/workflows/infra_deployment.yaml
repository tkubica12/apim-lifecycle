name: Infra deployment with Terragrunt
on:
  push:
    paths:
      - 'environments/staging/base/**'
  workflow_dispatch:

env:
  tf_version: '1.11.3'
  tg_version: '0.63.6'
  ARM_USE_OIDC: true
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

permissions:
  contents: write
  id-token: write
  pull-requests: write

jobs:
  infra-plan:
    runs-on: ubuntu-latest
    environment: staging-preflight
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Plan
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ./environments/staging/base/infra
          tg_add_approve: true
          tg_comment: false
          tg_command: 'plan -out base.tfplan'

      - name: Find all tfplan files
        run: find . -name '*.tfplan'

      - name: Upload Terraform Plan Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: ./base.tfplan

  infra-deploy:
    needs: infra-plan
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: 'Checkout code'
        uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Download Terraform Plan Artifact
        uses: actions/download-artifact@v4
        with:
          name: terraform-plan
          path: ./environments/staging/base/infra

      - name: Deploy
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ./environments/staging/base/infra
          tg_command: apply plan.tfplan
